# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Laravel Backend to Azure Web App - WebProjectBackEnd
 
on:
  push:
    branches:
      - main
    paths:
      - 'backend_Laravel/**'
      - '.github/workflows/main_webprojectbackend.yml'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, dom, fileinfo, sqlite3, pdo_sqlite
          tools: composer:v2

      - name: Set up backend directory
        run: |
          cd backend_Laravel
          composer install --no-dev --optimize-autoloader
          cat > .env << 'EOL'
          APP_NAME=Lume
          APP_ENV=production
          APP_KEY=base64:IGtdSyUcU/95yJuLbsVO0FxpBddKAZSBknBkENVKI+g=
          APP_DEBUG=true
          APP_URL=https://webprojectbackend.azurewebsites.net
          DB_CONNECTION=sqlite
          DB_DATABASE=/home/site/wwwroot/database.db
          LOG_CHANNEL=stack
          BROADCAST_DRIVER=log
          CACHE_DRIVER=file
          FILESYSTEM_DISK=local
          QUEUE_CONNECTION=sync
          SESSION_DRIVER=file
          SESSION_LIFETIME=120
          GITHUB_AI_KEY=${{ secrets.AI_API_KEY }}
          CORS_ALLOWED_ORIGINS=https://webprojectfrontend.azurewebsites.net
          EOL

      - name: Zip artifact for deployment
        run: |
          cd backend_Laravel
          zip -r ../release.zip ./*

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: php-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: php-app

      - name: Unzip artifact for deployment
        run: unzip release.zip
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_7F107CC8CD16456EB6E3382DD7A670E3 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_B51D737D0BD0492DA74EE27A2E80F279 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_482E2D2D5B1546C78323F415968B2574 }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'WebProjectBackEnd'
          slot-name: 'Production'
          package: .

      - name: 'Setup database and run migrations'
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az webapp ssh --name WebProjectBackEnd --resource-group Web_Project --timeout 180 --port 2222 << EOF
            # Run diagnostic commands to help troubleshoot
            echo "Current directory structure:"
            ls -la /home/site/wwwroot/
            
            # Fix database path in config using a more precise sed replacement
            sed -i 's/database_path(env("DB_DATABASE"))/env("DB_DATABASE")/' /home/site/wwwroot/config/database.php
            
            # Create database file with proper permissions
            touch /home/site/wwwroot/database.db
            chmod 777 /home/site/wwwroot/database.db
            
            # Set up .htaccess with proper routing and CORS
            cat > /home/site/wwwroot/public/.htaccess << 'EOL'
            <IfModule mod_rewrite.c>
                <IfModule mod_negotiation.c>
                    Options -MultiViews -Indexes
                </IfModule>
                
                RewriteEngine On
                
                # Handle Authorization Header
                RewriteCond %{HTTP:Authorization} .
                RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]
                
                # Remove index.php from path (critical fix)
                RewriteCond %{THE_REQUEST} ^GET\ /index\.php [NC]
                RewriteRule ^index\.php/(.*)$ /$1 [L,R=301]
                
                # Redirect Trailing Slashes If Not A Folder...
                RewriteCond %{REQUEST_FILENAME} !-d
                RewriteCond %{REQUEST_URI} (.+)/$
                RewriteRule ^ %1 [L,R=301]
                
                # Send Requests To Front Controller...
                RewriteCond %{REQUEST_FILENAME} !-d
                RewriteCond %{REQUEST_FILENAME} !-f
                RewriteRule ^ index.php [L]
            </IfModule>
            
            # Add CORS headers
            <IfModule mod_headers.c>
                Header always set Access-Control-Allow-Origin "https://webprojectfrontend.azurewebsites.net"
                Header always set Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
                Header always set Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization"
                Header always set Access-Control-Allow-Credentials "true"
                
                # Handle OPTIONS preflight requests (critical for CORS)
                RewriteEngine On
                RewriteCond %{REQUEST_METHOD} OPTIONS
                RewriteRule ^(.*)$ $1 [R=200,L]
            </IfModule>
            EOL
            
            # Create an API test endpoint to verify functionality
            mkdir -p /home/site/wwwroot/public/test-api
            cat > /home/site/wwwroot/public/test-api/index.php << 'EOL'
            <?php
            header('Content-Type: application/json');
            header('Access-Control-Allow-Origin: https://webprojectfrontend.azurewebsites.net');
            header('Access-Control-Allow-Methods: GET, POST, OPTIONS');
            header('Access-Control-Allow-Headers: Origin, Content-Type, Accept, Authorization');
            echo json_encode([
                'status' => 'success',
                'message' => 'API test endpoint is working!',
                'timestamp' => date('Y-m-d H:i:s')
            ]);
            EOL
            
            # Completely clear Laravel caches
            cd /home/site/wwwroot
            php artisan config:clear
            php artisan cache:clear
            php artisan route:clear
            php artisan view:clear
            
            # Fix permissions again
            chmod -R 777 /home/site/wwwroot/storage
            chmod -R 777 /home/site/wwwroot/bootstrap/cache
            chmod 777 /home/site/wwwroot/database.db
            
            # Run migrations with debugging
            php -d display_errors=1 artisan migrate:fresh --force
            
            # Create default user
            php artisan tinker --execute="use App\\Models\\Users; Users::create(['username' => 'admin', 'email' => 'c@c.c', 'password' => bcrypt('P@\$\$w0rd'), 'Role' => 'admin', 'IsApproved' => true]);"
            
            # Cache config AFTER everything else
            php artisan config:cache
            php artisan route:cache
            EOF
